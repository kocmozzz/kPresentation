{"version":3,"sources":["polyfills.js","helpers.js","kpresentation.js","kshow.js"],"names":[],"mappings":"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","file":"kpresentations.min.js","sourcesContent":["if (!Function.prototype.bind) {\r\n    Function.prototype.bind = function(oThis) {\r\n        if (typeof this !== 'function') {\r\n            // closest thing possible to the ECMAScript 5\r\n            // internal IsCallable function\r\n            throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n        }\r\n\r\n        var aArgs   = Array.prototype.slice.call(arguments, 1),\r\n            fToBind = this,\r\n            fNOP    = function() {},\r\n            fBound  = function() {\r\n                return fToBind.apply(this instanceof fNOP && oThis\r\n                        ? this\r\n                        : oThis,\r\n                    aArgs.concat(Array.prototype.slice.call(arguments)));\r\n            };\r\n\r\n        fNOP.prototype = this.prototype;\r\n        fBound.prototype = new fNOP();\r\n\r\n        return fBound;\r\n    };\r\n}","(function () {\r\n    this.Helper = function () {\r\n    };\r\n\r\n    /**\r\n     * Remove class from class attr of dom object\r\n     * @param obj\r\n     * @param className\r\n     */\r\n    Helper.prototype.removeClass = function (obj, className) {\r\n        var classes = obj.className.split(' ');\r\n\r\n        for (var i = 0; i < classes.length; i++) {\r\n            if (classes[i] == className) {\r\n                classes.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n        obj.className = classes.join(' ');\r\n    };\r\n\r\n    /**\r\n     * Add class to class attr of dom object\r\n     * @param obj\r\n     * @param className\r\n     */\r\n    Helper.prototype.addClass = function (obj, className) {\r\n        obj.className += ' ' + className;\r\n    };\r\n\r\n    /**\r\n     * Check if obj has class\r\n     * @param obj\r\n     * @param className\r\n     */\r\n    Helper.prototype.hasClass = function (obj, className) {\r\n        var classes = obj.className.split(' ');\r\n\r\n        return !!~classes.indexOf(className);\r\n    };\r\n\r\n    /**\r\n     * Extend default options\r\n     * @param defaultOptions\r\n     * @param customOptions\r\n     * @returns {*}\r\n     */\r\n    Helper.prototype.extendDefaultOptions = function (defaultOptions, customOptions) {\r\n        var property;\r\n\r\n        for (property in customOptions) {\r\n            if (customOptions.hasOwnProperty(property)) {\r\n                defaultOptions[property] = customOptions[property];\r\n            }\r\n        }\r\n\r\n        return defaultOptions;\r\n    };\r\n})();","(function () {\r\n\r\n    function Exception(message) {\r\n        console.warn(message);\r\n    }\r\n\r\n    /**\r\n     * Presentation\r\n     * @param domObj\r\n     * @param frameClassName\r\n     * @constructor\r\n     */\r\n    this.KPresentation = function (domObj, frameClassName) {\r\n        this.options = {\r\n            activePresentationClass: 'isShown',\r\n            activeFrameClass: 'active'\r\n        };\r\n\r\n        this.isShown = false;\r\n        this.slides = [];\r\n        this.activeSlide = 0;\r\n        this.slidesCount = 0;\r\n\r\n        this.domObj = domObj;\r\n        this.frameClassName = frameClassName;\r\n\r\n        this.slides = this.domObj.getElementsByClassName(this.frameClassName);\r\n        this.slidesCount = this.slides.length;\r\n\r\n        function preparePresentationToBeShown() {\r\n            this.domObj.addEventListener('click', this.startPresentation.bind(this));\r\n        }\r\n\r\n        function init() {\r\n            if (this.slidesCount) {\r\n                this.addClass(this.slides[0], this.options.activeFrameClass);\r\n                preparePresentationToBeShown.call(this);\r\n            } else {\r\n                throw new Exception(\"No slides available. Check slides class selector.\");\r\n            }\r\n        }\r\n\r\n        init.call(this);\r\n    };\r\n\r\n    KPresentation.prototype = new Helper();\r\n\r\n    /* Public methods */\r\n\r\n    /**\r\n     * Start presentation\r\n     */\r\n    KPresentation.prototype.startPresentation = function () {\r\n        if (this.isShown) return;\r\n\r\n        this.addClass(this.domObj, this.options.activePresentationClass);\r\n        this.isShown = true;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Cancel presentation\r\n     */\r\n    KPresentation.prototype.stopPresentation = function () {\r\n        this.removeClass(this.domObj, this.options.activePresentationClass);\r\n        this.isShown = false;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Go to next slide\r\n     */\r\n    KPresentation.prototype.next = function () {\r\n        if (this.checkLast()) return;\r\n\r\n        this.removeClass(this.slides[this.activeSlide], this.options.activeFrameClass);\r\n        this.activeSlide++;\r\n        this.addClass(this.slides[this.activeSlide], this.options.activeFrameClass);\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Go to prev slide\r\n     */\r\n    KPresentation.prototype.prev = function () {\r\n        if (this.checkFirst()) return;\r\n\r\n        this.removeClass(this.slides[this.activeSlide], this.options.activeFrameClass);\r\n        this.activeSlide--;\r\n        this.addClass(this.slides[this.activeSlide], this.options.activeFrameClass);\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Go to $index slide\r\n     */\r\n    KPresentation.prototype.goto = function (i) {\r\n        if (i < 0 || i > this.slides.length - 1) return false;\r\n\r\n        this.removeClass(this.slides[this.activeSlide], this.options.activeFrameClass);\r\n        this.activeSlide = i;\r\n        this.addClass(this.slides[this.activeSlide], this.options.activeFrameClass);\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Check if active slide is last\r\n     */\r\n    KPresentation.prototype.checkLast = function () {\r\n        return this.activeSlide === this.slidesCount - 1;\r\n    };\r\n\r\n    /**\r\n     * Check if active slide is first\r\n     */\r\n    KPresentation.prototype.checkFirst = function () {\r\n        return this.activeSlide === 0;\r\n    };\r\n\r\n    /**\r\n     * Find index of slide\r\n     * @param slide\r\n     * @returns {boolean}\r\n     */\r\n    KPresentation.prototype.indexOf = function (slide) {\r\n        var i = 0;\r\n\r\n        while (i < this.slides.length) {\r\n            if (this.slides[i] === slide) {\r\n                return i;\r\n            }\r\n            i++;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    /**\r\n     * Key press events\r\n     * @param event\r\n     */\r\n    KPresentation.prototype.handle = function (event) {\r\n        if (!this.isShown) return false;\r\n\r\n        switch (event) {\r\n            case 'button:esc':\r\n                this.stopPresentation();\r\n                break;\r\n            case 'button:prev':\r\n                this.prev();\r\n                break;\r\n            case 'button:next':\r\n                this.next();\r\n                break;\r\n            case 'button:space':\r\n                this.next();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n})();","(function (window, document) {\r\n    this.KShow = function () {\r\n        var defaults = {\r\n                presentationClass: 'k-presentation',\r\n                frameClass: 'k-presentation-frame'\r\n            },\r\n            instance = this;\r\n\r\n        /**\r\n         * Use KShow as singleton\r\n         * @returns {*}\r\n         * @constructor\r\n         */\r\n        KShow = function () {\r\n            return instance;\r\n        };\r\n\r\n        KShow.prototype = this;\r\n        instance = new KShow();\r\n        instance.constructor = KShow();\r\n\r\n        this.presentations = [];\r\n\r\n        /**\r\n         * Create new options by passing custom arguments\r\n         */\r\n        if (arguments[0] && typeof arguments[0] == 'object') {\r\n            this.options = this.extendDefaultOptions(defaults, arguments[0]);\r\n        } else {\r\n            this.options = defaults;\r\n        }\r\n\r\n        /**\r\n         * Event handlers\r\n         * @type {{keydown: Function}}\r\n         */\r\n        this.handlers = {\r\n            keydown: function (e) {\r\n                if (!e) e = event;\r\n\r\n                switch (e.keyCode) {\r\n                    case 27:\r\n                        this.notify('button:esc');\r\n                        break;\r\n                    case 37:\r\n                        this.notify('button:prev');\r\n                        break;\r\n                    case 39:\r\n                        this.notify('button:next');\r\n                        break;\r\n                    case 32:\r\n                        this.notify('button:space');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Initialize object of kShow\r\n         */\r\n        function init() {\r\n            var presentationsDomObjects = document.getElementsByClassName(this.options.presentationClass),\r\n                length = presentationsDomObjects.length;\r\n\r\n            if (!length) {\r\n                console.warn(\"No presentations available. Check presentations class selector.\");\r\n            }\r\n\r\n            for (var i = 0; i < length; i++) {\r\n                this.add(new KPresentation(presentationsDomObjects[i], this.options.frameClass));\r\n            }\r\n        }\r\n\r\n        function bind() {\r\n            document.onkeydown = this.handlers.keydown.bind(this);\r\n        }\r\n\r\n        init.call(this);\r\n        bind.call(this);\r\n\r\n        return instance;\r\n    };\r\n\r\n    KShow.prototype = new Helper();\r\n\r\n    /**\r\n     * Add presentation to list\r\n     * @param obj\r\n     * @returns {KShow}\r\n     */\r\n    KShow.prototype.add = function (obj) {\r\n        this.presentations.push(obj);\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Get presentations count\r\n     * @returns {Number}\r\n     */\r\n    KShow.prototype.count = function () {\r\n        return this.presentations.length;\r\n    };\r\n\r\n    /**\r\n     * Get presentation by index\r\n     * @param index\r\n     * @returns {*}\r\n     */\r\n    KShow.prototype.get = function (index) {\r\n        if (index > -1 && index < this.presentations.length) {\r\n            return this.presentations[index];\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Remove presentation at index\r\n     * @param index\r\n     * @returns {KShow}\r\n     */\r\n    KShow.prototype.remove = function (index) {\r\n        this.presentations.splice(index, 1);\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Notify presentations about key events\r\n     * @param context\r\n     */\r\n    KShow.prototype.notify = function (context) {\r\n        var count = this.count();\r\n\r\n        for (var i = 0; i < count; i++) {\r\n            this.get(i).handle(context);\r\n        }\r\n    };\r\n\r\n})(this, this.document);"],"sourceRoot":"/source/"}